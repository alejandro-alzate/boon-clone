jobs:
  - job: 'Build'
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          target: 'x86_64-pc-windows-gnu'
          rustup_toolchain: stable
        mac-stable:
          imageName: 'macos-10.13'
          target: 'x86_64-apple-darwin'
          rustup_toolchain: stable
        linux-stable:
          imageName: 'ubuntu-16.04'
          target: 'x86_64-unknown-linux-gnu'
          rustup_toolchain: stable

    pool:
      vmImage: $(imageName)

    steps:
      - template: '_build/install-rust.yml'
      - script: |
          set -eou
          D=$(mktemp -d)
          git clone https://github.com/rust-embedded/cross.git "$D"
          cd "$D"
          curl -O -L "https://gist.githubusercontent.com/nickbabcock/c7bdc8e5974ed9956abf46ffd7dc13ff/raw/e211bc17ea88e505003ad763fac7060b4ac1d8d0/patch"
          git apply patch
          cargo install --path .
          rm -rf "$D"
        displayName: Install cross
      - script: cross build --release --all --target $TARGET
        displayName: Build
      - script: cross test --release --all --target $TARGET
        displayName: Test

      - bash: |
          MY_TAG="latest"
          echo $MY_TAG
          echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
        displayName: "Create tag variable"
      - bash: |
          DATE="$(date +%Y-%m-%d)"
          echo "##vso[task.setvariable variable=build.date]$DATE"
        displayName: "Create date variable"
      - task: CopyFiles@2
        displayName: Copy assets
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/target/$(TARGET)/release'
          contents: |
            boon
          targetFolder: '$(Build.BinariesDirectory)/boon'
      - task: ArchiveFiles@2
        displayName: Gather assets
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/boon'
          archiveType: 'tar'
          tarCompression: 'gz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/boon-$(build.my_tag)-$(TARGET).tar.gz'
      - task: GithubRelease@0
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
        inputs:
          gitHubConnection: 'camchenry'
          repositoryName: 'camchenry/boon'
          action: 'edit'
          target: '$(build.sourceVersion)'
          tagSource: 'manual'
          tag: '$(build.my_tag)'
          assets: '$(Build.ArtifactStagingDirectory)/boon-$(build.my_tag)-$(TARGET).tar.gz'
          title: '$(build.my_tag) - $(build.date)'
          assetUploadMode: 'replace'
          addChangeLog: false
