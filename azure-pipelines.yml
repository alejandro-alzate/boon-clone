jobs:
  - job: 'Build'
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          rustup_toolchain: stable
        mac-stable:
          imageName: 'macos-10.13'
          rustup_toolchain: stable
        linux-stable:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: stable
        linux-beta:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: beta
        linux-nightly:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: nightly

    pool:
      vmImage: $(imageName)

    steps:
      - template: '_build/install-rust.yml'
      - script: cargo build --all
        displayName: Cargo build
      - script: cargo test --all
        displayName: Cargo test

  - job: 'BuildRelease'
    dependsOn: 'Build'
    steps:
      - bash: |
          MY_TAG="latest"
          echo $MY_TAG
          echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
        displayName: "Create tag variable"
      - bash: |
          DATE="$(date +%Y-%m-%d)"
          echo "##vso[task.setvariable variable=build.date]$DATE"
        displayName: "Create date variable"
      - task: CopyFiles@2
        displayName: Copy assets
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/target/$(TARGET)/release'
          contents: |
            boon
          targetFolder: '$(Build.BinariesDirectory)/boon'
      - task: ArchiveFiles@2
        displayName: Gather assets
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/boon'
          archiveType: 'tar'
          tarCompression: 'gz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/boon-$(build.my_tag)-$(TARGET).tar.gz'
      - task: GithubRelease@0
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
        inputs:
          gitHubConnection: 'camchenry'
          repositoryName: 'camchenry/boon'
          action: 'edit'
          target: '$(build.sourceVersion)'
          tagSource: 'manual'
          tag: '$(build.my_tag)'
          assets: '$(Build.ArtifactStagingDirectory)/boon-$(build.my_tag)-$(TARGET).tar.gz'
          title: '$(build.my_tag) - $(build.date)'
          assetUploadMode: 'replace'
          addChangeLog: false
