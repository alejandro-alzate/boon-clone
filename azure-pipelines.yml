jobs:
  - job: 'Build'
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          target: 'x86_64-pc-windows-gnu'
          rustup_toolchain: stable
        mac-stable:
          imageName: 'macos-10.13'
          target: 'x86_64-apple-darwin'
          rustup_toolchain: stable
        linux-stable:
          imageName: 'ubuntu-16.04'
          target: 'x86_64-unknown-linux-gnu'
          rustup_toolchain: stable

    pool:
      vmImage: $(imageName)

    steps:
      - template: '_build/install-rust.yml'
      - script: rustup target add $TARGET
        displayName: Add rustup target
      - script: cargo build --release --all --target $TARGET
        displayName: Build (64-bit)
      - script: cargo test --release --all --target $TARGET
        displayName: Test (64-bit)

      - bash: |
          MY_TAG="latest"
          echo $MY_TAG
          echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
        displayName: "Create tag variable"
      - bash: |
          DATE="$(date +%Y-%m-%d)"
          echo "##vso[task.setvariable variable=build.date]$DATE"
        displayName: "Create date variable"
      - task: CopyFiles@2
        displayName: Copy assets
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/target/$(TARGET)/release'
          contents: |
            boon
          targetFolder: '$(Build.BinariesDirectory)/boon'
      - task: ArchiveFiles@2
        displayName: Gather assets
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/boon'
          archiveType: 'tar'
          tarCompression: 'gz'
          archiveFile: '$(Build.ArtifactStagingDirectory)/boon-$(build.my_tag)-$(TARGET).tar.gz'
      - task: GithubRelease@0
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          gitHubConnection: 'camchenry'
          repositoryName: 'camchenry/boon'
          action: 'edit'
          target: '$(build.sourceVersion)'
          tagSource: 'manual'
          tag: '$(build.my_tag)'
          assets: '$(Build.ArtifactStagingDirectory)/boon-$(build.my_tag)-$(TARGET).tar.gz'
          title: '$(build.my_tag)'
          assetUploadMode: 'replace'
          addChangeLog: false
